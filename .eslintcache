[{"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\index.js":"1","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\App.js":"2","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\reportWebVitals.js":"3","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\navigation\\Navigation.js":"4","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Logo\\Logo.js":"5","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\ImageLinkForm\\ImageLinkForm.js":"6","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Rank.js":"7","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\FaceRecognition\\FaceRecognition.js":"8","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\SignIn\\SignIn.js":"9","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Register\\Register.js":"10"},{"size":506,"mtime":1611003367601,"results":"11","hashOfConfig":"12"},{"size":5701,"mtime":1612123822662,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":530,"mtime":1610907368077,"results":"15","hashOfConfig":"12"},{"size":351,"mtime":1609022285117,"results":"16","hashOfConfig":"12"},{"size":492,"mtime":1609335174995,"results":"17","hashOfConfig":"12"},{"size":581,"mtime":1612102096683,"results":"18","hashOfConfig":"12"},{"size":523,"mtime":1612017928544,"results":"19","hashOfConfig":"12"},{"size":2543,"mtime":1612101844091,"results":"20","hashOfConfig":"12"},{"size":2636,"mtime":1612123441849,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"zm6rnw",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\index.js",[],["47","48"],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\App.js",["49","50","51"],"import React, { useState, useEffect } from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank\";\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport { Grid } from 'semantic-ui-react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\n//Moved to Back-End so its hiidne from headers req\nconst app = new Clarifai.App({apiKey: '1eab0b351fac408285831bc6c61e6b9f'});\n\nconst particlesOptions = {\n  particles: {\n    \n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState ={\n  id:'',\n  name:'',\n  email:'',\n  password:'',\n  entries:0,\n  joined: ''\n}\n\n\nfunction App() {\n  /*Hooks states*/\n  const [input, setInput] = useState('');\n  const [imageURL,setImageURL] = useState(input);\n  const [transition,setTransition] =useState('');\n  const [faceBox,setFaceBox]=useState({});\n  const [route,setRoute] = useState('signin');\n  //user\n  const [isSignedIn,setIsSignedIn] = useState(false);\n  const [user,setUser] = useState({\n      id:'',\n      name:'',\n      email:'',\n      password:'',\n      entries:0,\n      joined: ''\n  });\n\n  const loadUser = (data)=>{\n    console.log(data);\n    setUser({\n      id:data.id,\n      name:data.name,\n      email:data.email,\n      password:data.password,\n      entries:data.entries,\n      joined:data.joined\n\n    });\n\n  }\n\n  useEffect(() => {\n    fetch('http://localhost:3000/')\n    .then(response=>response.json())\n   //.then(console.log); //console.log its the same with .then(data=>console.log(data))\n \n  }) ;\n\n  \n  const onInputChange =(event) =>{\n    //console.log(event.target.value);\n    setInput(event.target.value);\n  \n      \n    }\n\n    useEffect(() => {\n      setImageURL(input);\n      setFaceBox({});\n    }, [input]);\n\n  const onSubmitImage = () =>{\n   \n     \n       // app.models.predict({id: 'd02b4508df58432fbb84e800597b8959'},imageURL).then(\n        app.models.predict({id:Clarifai.FACE_DETECT_MODEL },imageURL).then( \n          function(response) {\n            if(response){\n              fetch('http://localhost:3000/image',{\n                method:'put',\n                headers:{'content-type':'application/json'},\n                body:JSON.stringify({\n                  id:user.id\n                })\n              })\n              .then(response=>response.json())\n              .then(count=>{\n                //*Object.assign() allow us to change only specific parametres in an object\n                //setUser(Object.assign(user,{entries:count}));\n                setUser({...user, entries:count});\n              })\n              .catch(console.log)\n            }\n            displayFaceBox(calculateFaceLocation(response));\n          },\n          function(err) {\n            console.log(err);\n          }\n        );\n     \n    }\n\n   \n\n   const  calculateFaceLocation = (res) =>{\n      const clarifaiFace = res.outputs[0].data.regions[0].region_info.bounding_box;\n      //console.log(clarifaiFace);\n      const image = document.getElementById('inputimage');\n      const width= Number(image.width);\n      const height =Number(image.height);\n      //console.log(width,height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n       \n      }\n\n   } \n\n   const displayFaceBox = (box) =>{\n     //console.log(box);\n    setFaceBox(box);\n   }\n\n   const onRouteChange = (newRoute) =>{\n\n      if (newRoute === 'signin'){\n        setIsSignedIn(false);\n        setInput('');\n        setImageURL('');\n        setFaceBox({});\n        setUser({\n          id:'',\n          name:'',\n          email:'',\n          password:'',\n          entries:0,\n          joined: ''\n        });\n      }else if (newRoute === 'home'){\n        setIsSignedIn(true);\n      }\n\n    setRoute(newRoute);\n   }\n\n  return (\n    <div className=\"App\">\n    <Particles className=\"particles\" params={{particlesOptions}}/>\n    { /*We use the route state to create routers for login */\n     (route==='home')\n        ?<React.Fragment>\n            <Grid  padded> \n                  <Grid.Column  floated=\"left\" >\n                  <Logo />\n                  </Grid.Column>\n              \n                  <Grid.Column > \n                  <Navigation onRouteChange ={onRouteChange}/>\n                  </Grid.Column>\n            </Grid>\n            <Grid stackable padded>\n                <Grid.Row>\n                  <Grid.Column width={7} >\n                  <Rank userName ={user.name} userMail={user.email} userEntries={user.entries}/>\n                  </Grid.Column>\n                  <Grid.Column >\n                  <ImageLinkForm onInputChange={onInputChange} onSubmitImage={onSubmitImage}/>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column >\n                  <FaceRecognition imageUrl = {imageURL} box={faceBox} transitionEffect={transition} />\n                  </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </React.Fragment>  \n        :( route==='signin' \n            ?<SignIn onRouteChange ={onRouteChange} loadUser={loadUser}/> \n            :<Register onRouteChange ={onRouteChange} newUser={loadUser}/>\n          )    \n     \n    }\n            \n     \n    </div>\n  );\n}\n\nexport default App;\n","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\reportWebVitals.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\navigation\\Navigation.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Logo\\Logo.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\ImageLinkForm\\ImageLinkForm.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Rank.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\FaceRecognition\\FaceRecognition.js",["52"],"import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl,box,transitionEffect}) => {\r\n    \r\n\r\n    return (\r\n        <div  >\r\n            <div className=\"img-style\" >\r\n                <img  id=\"inputimage\"  src={imageUrl}  style={{\"maxWidth\":\"500px\"}} /> \r\n                <div  className='bounding-box' style={{top:box.topRow, right:box.rightCol, bottom: box.bottomRow, left:box.leftCol}}></div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;\r\n",["53","54"],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\SignIn\\SignIn.js",["55"],"import React, { useState } from 'react'\r\nimport { Grid,Form,Button,Icon, Message } from 'semantic-ui-react';\r\nimport './signIn.css';\r\n\r\nconst SignIn = ({onRouteChange, loadUser}) => {\r\n    const [signInEmail,setSignInEmail] = useState('');\r\n    const [signInPassword,setSignInPassword] = useState('');\r\n\r\n    const onEmailChange  = (event) =>{\r\n        setSignInEmail(event.target.value);\r\n    }\r\n\r\n    const onPasswordChange  = (event) =>{\r\n        setSignInPassword(event.target.value);\r\n    }\r\n\r\n    const onSubmitSignIn = () =>{\r\n        //console.log(signInEmail,signInPassword);\r\n        //POST request to server. If email& passowrd match adn srver responses success we sign in\r\n        fetch('http://localhost:3000/signin',{\r\n            method:'post',\r\n            headers:{'content-type':'application/json'},\r\n            body:JSON.stringify({\r\n                email:signInEmail,\r\n                password:signInPassword\r\n            })\r\n        })\r\n        .then(response=>response.json())\r\n        .then(user=>{\r\n            if(user.id){\r\n                //if Server respond with a user\r\n                loadUser(user);\r\n                onRouteChange('home');\r\n            }\r\n        })\r\n       \r\n    }\r\n\r\n    return (\r\n        \r\n        <Grid centered columns={3} style={{marginTop:'10px'}} >\r\n        <Grid.Row><h1 >Welcome to Smart-Brain</h1></Grid.Row>\r\n        <Grid.Column className=\"signIn-form\">\r\n        <Form >\r\n        <h3 >Sign In</h3>\r\n            <Form.Field>\r\n            <label>Email</label>\r\n            <input \r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email-address\"\r\n                onChange={onEmailChange}\r\n            />\r\n            </Form.Field>\r\n            <Form.Field>\r\n            <label>Enter Password</label>\r\n            <input \r\n                type='password' \r\n                name=\"password\"\r\n                id=\"password\"\r\n                onChange={onPasswordChange}\r\n            />\r\n            </Form.Field>\r\n            <Button color='violet'  floated='right' onClick={onSubmitSignIn}>Sign In</Button>\r\n           \r\n            <Button basic color='purple' onClick={()=> onRouteChange('register')}> Register</Button>\r\n         </Form>\r\n         <Message info>\r\n            <Message.Header>Register or login with a demo account</Message.Header>\r\n            <p><b>email:</b> test@email.com <b>password: </b> test </p>\r\n         </Message>\r\n        </Grid.Column>\r\n        \r\n        </Grid>\r\n        \r\n     \r\n    )\r\n        \r\n}\r\n\r\nexport default SignIn;\r\n","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Register\\Register.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":30,"column":7,"nodeType":"62","messageId":"63","endLine":30,"endColumn":19},{"ruleId":"60","severity":1,"message":"64","line":44,"column":21,"nodeType":"62","messageId":"63","endLine":44,"endColumn":34},{"ruleId":"60","severity":1,"message":"65","line":48,"column":10,"nodeType":"62","messageId":"63","endLine":48,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":10,"column":17,"nodeType":"68","endLine":10,"endColumn":87},{"ruleId":"56","replacedBy":"69"},{"ruleId":"58","replacedBy":"70"},{"ruleId":"60","severity":1,"message":"71","line":2,"column":27,"nodeType":"62","messageId":"63","endLine":2,"endColumn":31},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'initialState' is assigned a value but never used.","Identifier","unusedVar","'setTransition' is assigned a value but never used.","'isSignedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["72"],["73"],"'Icon' is defined but never used.","no-global-assign","no-unsafe-negation"]