[{"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\index.js":"1","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\App.js":"2","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\reportWebVitals.js":"3","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\navigation\\Navigation.js":"4","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Logo\\Logo.js":"5","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\ImageLinkForm\\ImageLinkForm.js":"6","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Rank.js":"7","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\FaceRecognition\\FaceRecognition.js":"8","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\SignIn\\SignIn.js":"9","E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Register\\Register.js":"10"},{"size":506,"mtime":1611003367601,"results":"11","hashOfConfig":"12"},{"size":3956,"mtime":1610911620254,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":530,"mtime":1610907368077,"results":"15","hashOfConfig":"12"},{"size":351,"mtime":1609022285117,"results":"16","hashOfConfig":"12"},{"size":492,"mtime":1609335174995,"results":"17","hashOfConfig":"12"},{"size":527,"mtime":1610205602644,"results":"18","hashOfConfig":"12"},{"size":543,"mtime":1610122068655,"results":"19","hashOfConfig":"12"},{"size":2416,"mtime":1611006725490,"results":"20","hashOfConfig":"12"},{"size":962,"mtime":1611004391205,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zm6rnw",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\index.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\App.js",["44"],"import React, { useState, useEffect } from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank\";\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport { Grid } from 'semantic-ui-react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\n\nconst app = new Clarifai.App({apiKey: '1eab0b351fac408285831bc6c61e6b9f'});\n\nconst particlesOptions = {\n  particles: {\n    \n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\n\n\nfunction App() {\n  /*Hooks states*/\n  const [input, setInput] = useState('');\n  const [imageURL,setImageURL] = useState('');\n  const [transition,setTransition] =useState('');\n  const [faceBox,setFaceBox]=useState({});\n  const [route,setRoute] = useState('signin');\n\n\n  useEffect(() => {\n    fetch('http://localhost:3000/')\n    .then(response=>response.json())\n    .then(console.log);//its the same with .then(data=>console.log(data))\n \n  }) ;\n\n  const onInputChange =(event) =>{\n    //console.log(event.target.value);\n    setInput(event.target.value);\n    }\n\n  const onSubmitImage = () =>{\n   \n      setImageURL(input);\n      console.log('clicked');\n     \n       // app.models.predict({id: Clarifai.FACE_DETECT_MODEL},imageURL).then(\n        app.models.predict({id: 'd02b4508df58432fbb84e800597b8959'},imageURL).then( \n          function(response) {\n            displayFaceBox(calculateFaceLocation(response));\n          },\n          function(err) {\n            console.log(err);\n          }\n        );\n     \n    }\n\n   const  calculateFaceLocation = (res) =>{\n      const clarifaiFace = res.outputs[0].data.regions[0].region_info.bounding_box;\n      //console.log(clarifaiFace);\n      const image = document.getElementById('inputimage');\n      const width= Number(image.width);\n      const height =Number(image.height);\n      console.log(width,height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n      }\n\n   } \n\n   const displayFaceBox = (box) =>{\n     //console.log(box);\n    setFaceBox(box);\n   }\n\n   const onRouteChange = (newRoute) =>{\n\n    setRoute(newRoute);\n\n   }\n  return (\n    <div className=\"App\">\n    <Particles className=\"particles\" params={{particlesOptions}}/>\n    { /*We use the route state to create routers for login */\n     (route==='home')\n        ?<React.Fragment>\n            <Grid  padded> \n                  <Grid.Column  floated=\"left\" >\n                  <Logo />\n                  </Grid.Column>\n              \n                  <Grid.Column > \n                  <Navigation onRouteChange ={onRouteChange}/>\n                  </Grid.Column>\n            </Grid>\n            <Grid stackable padded>\n                <Grid.Row>\n                  <Grid.Column width={7} >\n                  <Rank/>\n                  </Grid.Column>\n                  <Grid.Column >\n                  <ImageLinkForm onInputChange={onInputChange} onSubmitImage={onSubmitImage}/>\n                  </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                  <Grid.Column >\n                  <FaceRecognition imageUrl = {imageURL} box={faceBox} transitionEffect={transition} />\n                  </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </React.Fragment>  \n        :( route==='signin' \n            ?<SignIn onRouteChange ={onRouteChange}/> \n            :<Register onRouteChange ={onRouteChange}/>\n          )    \n     \n    }\n            \n     \n    </div>\n  );\n}\n\nexport default App;\n",["45","46"],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\reportWebVitals.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\navigation\\Navigation.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Logo\\Logo.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\ImageLinkForm\\ImageLinkForm.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Rank.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\FaceRecognition\\FaceRecognition.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\SignIn\\SignIn.js",[],"E:\\Users\\TEO\\zero-to-mastery\\smartbrain\\src\\components\\Register\\Register.js",[],{"ruleId":"47","severity":1,"message":"48","line":36,"column":21,"nodeType":"49","messageId":"50","endLine":36,"endColumn":34},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},"no-unused-vars","'setTransition' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-global-assign","no-unsafe-negation"]